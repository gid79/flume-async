apply plugin: 'java'
apply plugin: 'maven'

group = 'com.logicalpractice'
version = '1.0-SNAPSHOT'

description = """flume-async"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
     mavenCentral()
}
dependencies {
    compile( group: 'org.apache.flume', name: 'flume-ng-sdk', version:'1.4.0' ){
      exclude module:'libthrift'
    }
    compile group: 'org.apache.avro', name: 'avro-ipc', version:'1.7.5'
    compile group: 'org.apache.avro', name: 'avro', version:'1.7.5'
    compile "com.google.guava:guava:15.0"
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
//    testCompile group: 'org.slf4j', name: 'slf4j-simple', version:'1.6.4'
    testCompile 'ch.qos.logback:logback-classic:1.0.13'
    testCompile 'net.sourceforge.argparse4j:argparse4j:0.4.2'
    testCompile 'org.apache.commons:commons-math3:3.2'
    testCompile 'com.codahale.metrics:metrics-core:3.0.1'
}

task performanceClientJar(type:Jar, dependsOn:testClasses) {
    destinationDir buildDir
    archiveName "performanceClient.jar"
    from sourceSets.main.output.classesDir
    from sourceSets.test.output.classesDir
    from configurations.testRuntime.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes 'Main-Class':'com.logicalpractice.flume.performance.PerformanceClient'
    }
}
task performanceServerJar(type:Jar, dependsOn:testClasses) {
    destinationDir buildDir
    archiveName "performanceServer.jar"
    from sourceSets.main.output.classesDir
    from sourceSets.test.output.classesDir
    from configurations.testRuntime.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes 'Main-Class':'com.logicalpractice.flume.performance.RemoteServer'
    }
}

assemble.dependsOn << performanceClientJar << performanceServerJar
